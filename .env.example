# Google OAuth Configuration
# Get these values from https://console.developers.google.com/
GOOGLE_CLIENT_ID=your_google_client_id_here
GOOGLE_CLIENT_SECRET=your_google_client_secret_here
GOOGLE_REDIRECT_URL=http://localhost:8080/auth/callback

# Server Configuration
PORT=8080

# Database Configuration (for Google Cloud Datastore)
# GOOGLE_CLOUD_PROJECT=your_project_id_here

# Stripe Configuration (for subscriptions)
# Get these from https://dashboard.stripe.com/apikeys
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key_here
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here
STRIPE_PRICE_ID=price_your_price_id_here

# Subscription Feature Flag
SUBSCRIPTION_ENABLED=true

# Admin Configuration
# Generate admin tokens with: ADMIN_TOKEN="bootstrap" ./admin.sh create-token "description"
ADMIN_TOKEN=your_64_character_admin_token_here
INITIAL_ADMIN_EMAILS=your-email@example.com

# CSRF Configuration (Production)
# Generate with: openssl rand -base64 32
# IMPORTANT: Set this in production to ensure CSRF tokens survive restarts
# If not set, tokens are regenerated on each restart (development only)
# CSRF_SECRET=base64_encoded_32_byte_secret_here

# Note: For local development, make sure to:
# 1. Create a Google OAuth application at https://console.developers.google.com/
# 2. Add http://localhost:8080/auth/callback to authorized redirect URIs
# 3. Create a Stripe account at https://stripe.com/ (optional, for subscriptions)
# 4. Copy this file to .env and fill in your actual values
# 5. Install dependencies: go mod tidy