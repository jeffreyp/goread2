const ErrorType={NETWORK:"network",AUTH:"auth",VALIDATION:"validation",SERVER:"server",UNKNOWN:"unknown"},ToastType={INFO:"info",SUCCESS:"success",WARNING:"warning",ERROR:"error"};class ErrorHandler{constructor(){this.retryAttempts=new Map,this.maxRetries=3,this.baseDelay=1e3,this.connectionStatus="online",this.setupConnectionMonitoring()}setupConnectionMonitoring(){window.addEventListener("online",()=>{this.connectionStatus="online",this.updateConnectionIndicator(!0),this.showToast("Connection restored",ToastType.SUCCESS)}),window.addEventListener("offline",()=>{this.connectionStatus="offline",this.updateConnectionIndicator(!1),this.showToast("No internet connection",ToastType.WARNING)}),this.updateConnectionIndicator(navigator.onLine)}updateConnectionIndicator(e){let t=document.getElementById("connection-indicator");t||(t=document.createElement("div"),t.id="connection-indicator",document.body.appendChild(t)),e?(t.className="connection-indicator online",t.textContent="Online"):(t.className="connection-indicator offline",t.textContent="Offline")}detectErrorType(e,t=null){if(t){if(401===t.status||403===t.status)return ErrorType.AUTH;if(t.status>=400&&t.status<500)return ErrorType.VALIDATION;if(t.status>=500)return ErrorType.SERVER}return e instanceof TypeError&&e.message.includes("fetch")||e.message&&(e.message.includes("network")||e.message.includes("connect"))?ErrorType.NETWORK:ErrorType.UNKNOWN}getErrorMessage(e,t=""){const s={[ErrorType.NETWORK]:"Unable to connect to the server. Please check your internet connection.",[ErrorType.AUTH]:"Your session has expired. Please log in again.",[ErrorType.VALIDATION]:t||"Invalid input. Please check your data and try again.",[ErrorType.SERVER]:"A server error occurred. Please try again later.",[ErrorType.UNKNOWN]:t||"An unexpected error occurred. Please try again."};return s[e]||s[ErrorType.UNKNOWN]}showError(e,t=ErrorType.UNKNOWN,s={}){const{retry:i=null,dismissible:n=!0,autoDismiss:r=null,context:a=""}=s,o=document.querySelector(".error-message");o&&o.remove();const l=document.createElement("div");l.className=`error-message error-type-${t}`;const d=document.createElement("div");d.className="error-content";const c=document.createElement("span");c.className="error-icon",c.textContent=this.getErrorIcon(t),d.appendChild(c);const h=document.createElement("span");h.className="error-text",h.textContent=e,d.appendChild(h),l.appendChild(d);const u=document.createElement("div");if(u.className="error-buttons",i){const e=document.createElement("button");e.className="error-retry-btn",e.textContent="Retry",e.onclick=()=>{l.remove(),i()},u.appendChild(e)}if(n){const e=document.createElement("button");e.className="error-dismiss-btn",e.textContent="Dismiss",e.onclick=()=>l.remove(),u.appendChild(e)}u.children.length>0&&l.appendChild(u),document.body.appendChild(l),r&&setTimeout(()=>{l.parentNode&&l.remove()},r)}getErrorIcon(e){const t={[ErrorType.NETWORK]:"📡",[ErrorType.AUTH]:"🔒",[ErrorType.VALIDATION]:"⚠️",[ErrorType.SERVER]:"🔧",[ErrorType.UNKNOWN]:"❌"};return t[e]||t[ErrorType.UNKNOWN]}showToast(e,t=ToastType.INFO,s=3e3){let i=document.getElementById("toast-container");i||(i=document.createElement("div"),i.id="toast-container",document.body.appendChild(i));const n=document.createElement("div");n.className=`toast toast-${t}`;const r=document.createElement("span");r.className="toast-icon",r.textContent=this.getToastIcon(t),n.appendChild(r);const a=document.createElement("span");a.className="toast-message",a.textContent=e,n.appendChild(a),i.appendChild(n),setTimeout(()=>n.classList.add("show"),10),setTimeout(()=>{n.classList.remove("show"),setTimeout(()=>n.remove(),300)},s)}getToastIcon(e){const t={[ToastType.INFO]:"ℹ️",[ToastType.SUCCESS]:"✓",[ToastType.WARNING]:"⚠️",[ToastType.ERROR]:"✕"};return t[e]||t[ToastType.INFO]}async retryOperation(e,t,s=this.maxRetries){let i=this.retryAttempts.get(e)||0;try{const s=await t();return this.retryAttempts.delete(e),s}catch(n){if(i++,this.retryAttempts.set(e,i),i>=s)throw this.retryAttempts.delete(e),n;const r=this.baseDelay*Math.pow(2,i-1);return this.showToast(`Retry attempt ${i}/${s}...`,ToastType.INFO,2e3),await new Promise(e=>setTimeout(e,r)),this.retryOperation(e,t,s)}}async handleFetchError(e,t,s="",i=null){const n=this.detectErrorType(e,t),r=this.getErrorMessage(n,e.message);return n===ErrorType.NETWORK&&i?this.showError(r,n,{retry:i,context:s}):n===ErrorType.AUTH?this.showError(r,n,{dismissible:!0,autoDismiss:null}):this.showError(r,n,{retry:i,context:s,autoDismiss:i?null:5e3}),n}}class GoReadApp{constructor(){this.currentFeed=null,this.currentArticle=null,this.feeds=[],this.articles=[],this.user=null,this.csrfToken=null,this.articleFilter="unread",this.subscriptionInfo=null,this.sessionStarted=!0,this.authCheckFailed=!1,this.throttleTimeout=null,this.errorHandler=new ErrorHandler,this.init()}async init(){await this.checkAuth(),this.user?(this.showApp(),this.bindEvents(),this.setupKeyboardShortcuts(),Promise.all([this.loadSubscriptionInfo(),this.loadFeedsOptimized()]).then(()=>{console.log("Initial data loading complete"),this.startUnreadCountSync()})):(console.log("User not authenticated, showing login"),this.showLogin())}async checkAuth(){if(this.authCheckFailed)return!1;try{const e=await fetch("/auth/me");if(e.ok){const t=await e.json();return this.user=t.user,this.csrfToken=t.csrf_token,this.authCheckFailed=!1,!0}return 401===e.status?(this.authCheckFailed=!0,console.log("User not authenticated - showing login screen"),!1):(console.warn("Auth check failed with status:",e.status),this.authCheckFailed=!0,!1)}catch(e){return console.warn("Unable to connect to authentication service:",e.message),this.authCheckFailed=!0,!1}}getAuthHeaders(e=!0){const t={};return this.csrfToken&&(t["X-CSRF-Token"]=this.csrfToken),e&&(t["Content-Type"]="application/json"),t}async loadSubscriptionInfo(){try{console.log("Loading subscription info...");const e=await fetch("/api/subscription");e.ok?(this.subscriptionInfo=await e.json(),console.log("Subscription info loaded:",this.subscriptionInfo),this.updateSubscriptionDisplay()):401===e.status?(console.log("Authentication failed while loading subscription info, showing login"),this.authCheckFailed=!0,this.showLogin()):console.error("Failed to load subscription info:",e.status)}catch(e){console.error("Error loading subscription info:",e)}}bindEvents(){const e=document.getElementById("add-feed-btn");e&&e.addEventListener("click",()=>{this.showAddFeedModal()});const t=document.getElementById("refresh-btn");t&&t.addEventListener("click",()=>{this.refreshFeeds()});const s=document.getElementById("help-btn");s&&s.addEventListener("click",()=>{this.showHelpModal()});const i=document.getElementById("import-opml-btn");i&&i.addEventListener("click",()=>{this.showImportOpmlModal()}),this.setupSwipeGestures(),this.setupPullToRefresh(),document.querySelectorAll(".close").forEach(e=>{e.addEventListener("click",e=>{const t=e.target.closest(".modal");"add-feed-modal"===t.id?this.hideAddFeedModal():"help-modal"===t.id?this.hideHelpModal():"import-opml-modal"===t.id&&this.hideImportOpmlModal()})});const n=document.getElementById("cancel-add-feed");n&&n.addEventListener("click",()=>{this.hideAddFeedModal()});const r=document.getElementById("cancel-import-opml");r&&r.addEventListener("click",()=>{this.hideImportOpmlModal()});const a=document.getElementById("add-feed-form");a&&a.addEventListener("submit",e=>{e.preventDefault(),this.addFeed()});const o=document.getElementById("import-opml-form");o&&o.addEventListener("submit",async e=>{e.preventDefault();(await this.loadModalManager()).importOpml()}),window.addEventListener("click",e=>{e.target.classList.contains("modal")&&("add-feed-modal"===e.target.id?this.hideAddFeedModal():"help-modal"===e.target.id?this.hideHelpModal():"import-opml-modal"===e.target.id&&this.hideImportOpmlModal())});const l=document.querySelector('[data-feed-id="all"]');l&&l.addEventListener("click",()=>{this.selectFeed("all")}),document.querySelectorAll('input[name="article-filter"]').forEach(e=>{e.addEventListener("change",e=>{this.articleFilter=e.target.value,this.sessionStarted=!0,this.applyArticleFilter(),this.sessionStarted=!1})});const d=document.querySelector(`input[name="article-filter"][value="${this.articleFilter}"]`);d&&(d.checked=!0),this.setupMobileNavigation()}setupMobileNavigation(){const e=document.getElementById("mobile-menu-btn"),t=document.getElementById("header-actions");e&&t&&(e.addEventListener("click",()=>{t.classList.toggle("show")}),document.addEventListener("click",s=>{e.contains(s.target)||t.contains(s.target)||t.classList.remove("show")}));const s=document.getElementById("tablet-sidebar-toggle"),i=document.querySelector(".sidebar-wrapper"),n=document.getElementById("sidebar-backdrop");if(s&&i&&n){const e=e=>{e.preventDefault(),e.stopPropagation(),i.classList.toggle("show"),n.classList.toggle("show")};s.addEventListener("click",e),s.addEventListener("touchend",e);const t=e=>{e.preventDefault(),e.stopPropagation(),i.classList.remove("show"),n.classList.remove("show")};n.addEventListener("click",t),n.addEventListener("touchend",t)}const r=document.querySelectorAll(".mobile-nav-btn"),a=document.querySelector(".feed-pane"),o=document.querySelector(".article-pane"),l=(document.querySelector(".content-pane"),window.matchMedia("(orientation: portrait)").matches);if(window.innerWidth<768&&l){a&&a.classList.remove("active"),o&&o.classList.remove("active");const e=document.querySelector('[data-pane="content"]');e&&(r.forEach(e=>e.classList.remove("active")),e.classList.add("active"))}r.length>0&&r.forEach(e=>{e.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation();const s=window.matchMedia("(orientation: portrait)").matches;if(window.innerWidth>=768||!s)return;const i=e.dataset.pane;console.log("Mobile nav button clicked:",i),r.forEach(e=>e.classList.remove("active")),e.classList.add("active"),a&&a.classList.remove("active"),o&&o.classList.remove("active"),"feeds"===i&&a?(a.classList.add("active"),console.log("Showing feeds pane")):"articles"===i&&o?(o.classList.add("active"),console.log("Showing articles pane")):"content"===i&&console.log("Showing content pane")})})}updateMobileNavigation(e){const t=window.matchMedia("(orientation: portrait)").matches;if(window.innerWidth>=768||!t)return;const s=document.querySelectorAll(".mobile-nav-btn"),i=document.querySelector(".feed-pane"),n=document.querySelector(".article-pane");if(s.forEach(e=>e.classList.remove("active")),i&&i.classList.remove("active"),n&&n.classList.remove("active"),"feeds"===e&&i){i.classList.add("active");const e=document.querySelector('[data-pane="feeds"]');e&&e.classList.add("active")}else if("articles"===e&&n){n.classList.add("active");const e=document.querySelector('[data-pane="articles"]');e&&e.classList.add("active")}else if("content"===e){const e=document.querySelector('[data-pane="content"]');e&&e.classList.add("active")}}setupSwipeGestures(){const e=document.querySelector(".content-pane");if(!e)return;let t=0,s=0,i=0,n=0;e.addEventListener("touchstart",e=>{window.innerWidth>=1024||(t=e.changedTouches[0].screenX,s=e.changedTouches[0].screenY)},{passive:!0}),e.addEventListener("touchend",e=>{if(window.innerWidth>=1024)return;if(null===this.currentArticle||0===this.articles.length)return;i=e.changedTouches[0].screenX,n=e.changedTouches[0].screenY;const r=i-t,a=Math.abs(n-s);Math.abs(r)>50&&a<100&&(r<0?this.selectNextArticleAndMarkCurrentAsRead():this.selectPreviousArticle())},{passive:!0})}setupPullToRefresh(){if(!("ontouchstart"in window))return;const e=document.querySelector(".feed-pane"),t=document.querySelector(".article-pane");e&&new PullToRefresh(e,async()=>{await this.refreshFeeds()}),t&&new PullToRefresh(t,async()=>{this.currentFeed&&(await this.loadArticles(this.currentFeed),await this.updateUnreadCounts())})}setupKeyboardShortcuts(){document.addEventListener("keydown",async e=>{if(!e.ctrlKey&&!e.metaKey&&"INPUT"!==e.target.tagName&&"TEXTAREA"!==e.target.tagName)switch(e.key){case"j":e.preventDefault(),await this.selectNextArticleAndMarkCurrentAsRead();break;case"k":e.preventDefault(),this.selectPreviousArticle();break;case"o":case"Enter":e.preventDefault(),this.openCurrentArticle();break;case"m":e.preventDefault(),this.toggleCurrentArticleRead();break;case"s":e.preventDefault(),this.toggleCurrentArticleStar();break;case"r":e.preventDefault(),this.refreshFeeds()}})}async loadFeeds(){try{const[e,t]=await Promise.all([fetch("/api/feeds"),fetch("/api/feeds/unread-counts")]);if(!e.ok)throw new Error(`HTTP ${e.status}`);const s=await e.json();if(this.feeds=s,Array.isArray(this.feeds)){if(this.renderFeeds(),t.ok){const e=await t.json();this.applyUnreadCounts(e)}this.feeds.length>0&&this.selectFeed("all")}else this.showError("Invalid feed data received from server")}catch(e){console.error("Failed to load feeds:",e);const t=this.errorHandler.detectErrorType(e),s=this.errorHandler.getErrorMessage(t,"Failed to load your feeds");this.showError(s,t,{retry:()=>this.loadFeeds(),context:"loading feeds"})}}async loadFeedsOptimized(){try{const e=document.getElementById("feed-list"),t=e.querySelectorAll(".feed-item:not(.special)"),s=e.querySelector(".loading");t.forEach(e=>e.remove()),s&&s.remove();const i=document.createElement("div");i.className="loading",i.textContent="Loading feeds...",e.appendChild(i),document.getElementById("article-list").innerHTML='<div class="loading">Loading articles...</div>';const[n,r]=await Promise.all([fetch("/api/feeds"),fetch("/api/feeds/unread-counts")]);if(!n.ok){if(401===n.status)return console.log("Authentication failed while loading feeds, showing login"),this.authCheckFailed=!0,void this.showLogin();const e=new Error(`HTTP ${n.status}`),t=this.errorHandler.detectErrorType(e,n),s=this.errorHandler.getErrorMessage(t,"Failed to load your feeds");throw this.showError(s,t,{retry:()=>this.loadFeedsOptimized(),context:"loading feeds"}),e}const a=await n.json();if(this.feeds=a,Array.isArray(this.feeds)){if(this.renderFeeds(),r.ok){const e=await r.json();this.applyUnreadCounts(e)}if(this.feeds.length>0){this.currentFeed="all";const e=document.querySelector('[data-feed-id="all"]');e&&e.classList.add("active"),document.getElementById("article-pane-title").textContent="Articles",this.loadArticles("all")}}else this.showError("Invalid feed data received from server",ErrorType.SERVER)}catch(e){console.error("Failed to load feeds:",e)}}renderFeeds(){if(console.log("RENDER FEEDS CALLED WITH:",this.feeds?.length||0,"feeds"),!Array.isArray(this.feeds))return;const e=document.getElementById("feed-list"),t=e.querySelectorAll(".feed-item:not(.special)"),s=e.querySelector(".loading"),i=e.querySelector(".empty-state");if(t.forEach(e=>e.remove()),s&&s.remove(),i&&i.remove(),0===this.feeds.length){const t='<button class="btn btn-primary" id="empty-add-feed-btn">Add Your First Feed</button>',s=this.createEmptyState("/static/images/empty-feeds.svg","Welcome to GoRead2!","Get started by adding your first RSS feed. You can add feeds from your favorite blogs, news sites, and more.",t);return e.appendChild(s),void setTimeout(()=>{const e=document.getElementById("empty-add-feed-btn");e&&e.addEventListener("click",()=>this.showAddFeedModal())},0)}[...this.feeds].sort((e,t)=>e.title.localeCompare(t.title)).forEach(t=>{const s=document.createElement("div");s.className="feed-item",s.dataset.feedId=t.id;const i=document.createElement("span");i.className="feed-title",i.textContent=t.title;const n=document.createElement("div");n.style.display="flex",n.style.alignItems="center";const r=document.createElement("span");r.className="unread-count",r.dataset.count="0",r.textContent="0";const a=document.createElement("div");a.className="feed-actions";const o=document.createElement("button");o.className="delete-feed",o.dataset.feedId=t.id,o.title="Delete feed",o.textContent="×",a.appendChild(o),n.appendChild(r),n.appendChild(a),s.appendChild(i),s.appendChild(n),s.addEventListener("click",e=>{e.target.classList.contains("delete-feed")||this.selectFeed(t.id)}),o.addEventListener("click",e=>{e.stopPropagation(),this.deleteFeed(t.id)}),e.appendChild(s)})}async selectFeed(e){this.currentFeed=e,document.querySelectorAll(".feed-item").forEach(e=>{e.classList.remove("active")}),document.querySelector(`[data-feed-id="${e}"]`).classList.add("active"),await this.loadArticles(e);document.getElementById("article-pane-title").textContent="Articles",this.updateMobileNavigation("articles");const t=window.matchMedia("(orientation: landscape)").matches;if(window.innerWidth>=768&&window.innerWidth<1024||window.innerWidth<768&&t){const e=document.querySelector(".article-pane");e&&e.scrollIntoView({behavior:"smooth",block:"start"})}}async loadArticles(e,t=!1){try{t||(document.getElementById("article-list").innerHTML='<div class="loading">Loading articles...</div>',this.articles=[],this.articleOffset=0,this.loadedArticleIds=new Set);const s=50;let i;if("all"===e){const e="unread"===this.articleFilter?"&unread_only=true":"";let n=this.articleOffset;if(t&&"unread"===this.articleFilter){const e=this.articles.filter(e=>e.is_read).length;n=Math.max(0,this.articleOffset-e)}i=`/api/feeds/all/articles?limit=${s}&offset=${n}${e}`}else i=`/api/feeds/${e}/articles`;const n=await fetch(i),r=await n.json(),a=t?this.articles.length:0;if(t){const e=r.filter(e=>!this.loadedArticleIds.has(e.id)&&(this.loadedArticleIds.add(e.id),!0));this.articles.push(...e),this.articleOffset+=s}else this.articles=r,this.loadedArticleIds=new Set(r.map(e=>e.id)),this.articleOffset=r.length;this.hasMoreArticles=r.length===s,this.renderArticlesOptimized(t),t&&this.articles.length>a&&this.autoSelectFirstUnreadFromNewBatch(a)}catch(s){console.error("Failed to load articles:",s);const i=this.errorHandler.detectErrorType(s),n=this.errorHandler.getErrorMessage(i,"Failed to load articles");this.showError(n,i,{retry:()=>this.loadArticles(e,t),context:"loading articles"})}}autoSelectFirstUnreadFromNewBatch(e){for(let t=e;t<this.articles.length;t++){const e=this.articles[t];if("unread"===this.articleFilter&&!e.is_read)return void this.selectArticle(t);if("all"===this.articleFilter&&!e.is_read)return void this.selectArticle(t)}"all"===this.articleFilter&&e<this.articles.length&&this.selectArticle(e)}addLoadMoreButton(){const e=document.getElementById("article-list"),t=e.querySelector(".load-more-button");if(t&&t.remove(),this.hasMoreArticles){const t=document.createElement("div");t.className="load-more-button",t.style.cssText="padding: 20px; text-align: center; border-top: 1px solid #e1e5e9;";const s=document.createElement("button");s.className="btn btn-secondary",s.textContent="Load More Articles",s.onclick=()=>this.loadMoreArticles(),t.appendChild(s),e.appendChild(t)}}async loadMoreArticles(){if("all"===this.currentFeed&&this.hasMoreArticles){const e=document.querySelector(".load-more-button button");e&&(e.textContent="Loading...",e.disabled=!0),await this.loadArticles("all",!0),e&&(e.textContent="Load More Articles",e.disabled=!1)}}renderArticles(){const e=document.getElementById("article-list");if(0===this.articles.length)return void(e.innerHTML='<div class="placeholder">No articles found</div>');const t=document.createDocumentFragment(),s=e.cloneNode(!1);e.parentNode.replaceChild(s,e);const i=document.getElementById("article-list");i.addEventListener("click",e=>{if(e.target.classList.contains("star-btn"))return e.stopPropagation(),e.preventDefault(),void this.toggleStar(parseInt(e.target.dataset.articleId));const t=e.target.closest(".article-item");if(t&&!e.target.classList.contains("star-btn")){const e=parseInt(t.dataset.index);this.selectArticle(e)}}),this.articles.forEach((e,s)=>{const i=document.createElement("div");i.className="article-item "+(e.is_read?"read":""),i.dataset.articleId=e.id,i.dataset.index=s;const n=new Date(e.published_at).toLocaleDateString();i.innerHTML=`\n                <div class="article-header">\n                    <div style="flex: 1;">\n                        <div class="article-title">${this.escapeHtml(e.title)}</div>\n                        <div class="article-meta">\n                            <span>${n}</span>\n                            ${e.author?`<span>by ${this.escapeHtml(e.author)}</span>`:""}\n                        </div>\n                    </div>\n                    <div class="article-actions">\n                        <button class="action-btn star-btn ${e.is_starred?"starred":""}" \n                                data-article-id="${e.id}" title="Star article">★</button>\n                    </div>\n                </div>\n                ${e.description?`<div class="article-description">${this.sanitizeContent(e.description,!0)}</div>`:""}\n            `,t.appendChild(i)}),i.appendChild(t),this.applyArticleFilter();const n=document.querySelectorAll(".article-item:not(.filtered-out)");if(n.length>0){const e=parseInt(n[0].dataset.index);this.selectArticle(e)}else this.currentArticle=null,this.currentFeed&&(document.getElementById("article-content").innerHTML='<div class="placeholder"><p>No articles to display.</p></div>')}renderArticlesOptimized(e=!1){const t=document.getElementById("article-list");if(0===this.articles.length){if("unread"===this.articleFilter){const e=this.createEmptyState("/static/images/all-caught-up.svg","All Caught Up!","You've read all your articles. Great job! New articles will appear here as they're published.");t.innerHTML="",t.appendChild(e)}else{const e=this.createEmptyState("/static/images/empty-articles.svg","No Articles Yet","This feed doesn't have any articles yet. Check back later for new content.");t.innerHTML="",t.appendChild(e)}return}if(e){const e=t.querySelectorAll(".article-item").length,s=t.querySelector(".load-more-button");s&&s.remove();const i=document.createDocumentFragment();for(let t=e;t<this.articles.length;t++){const e=this.articles[t],s=document.createElement("div");s.className="article-item "+(e.is_read?"read":""),s.dataset.articleId=e.id,s.dataset.index=t;const n=new Date(e.published_at).toLocaleDateString();s.innerHTML=`\n                    <div class="article-header">\n                        <div style="flex: 1;">\n                            <div class="article-title">${this.escapeHtml(e.title)}</div>\n                            <div class="article-meta">\n                                <span>${n}</span>\n                                ${e.author?`<span>by ${this.escapeHtml(e.author)}</span>`:""}\n                            </div>\n                        </div>\n                        <div class="article-actions">\n                            <button class="action-btn star-btn ${e.is_starred?"starred":""}"\n                                    data-article-id="${e.id}" title="Star article">★</button>\n                        </div>\n                    </div>\n                    ${e.description?`<div class="article-description">${this.sanitizeContent(e.description,!0)}</div>`:""}\n                `,i.appendChild(s)}return t.appendChild(i),"all"===this.currentFeed&&this.hasMoreArticles&&this.addLoadMoreButton(),void this.applyArticleFilter(!1)}const s=this.articles,i=document.createDocumentFragment(),n=t.cloneNode(!1);t.parentNode.replaceChild(n,t);const r=document.getElementById("article-list");r.addEventListener("click",e=>{if(e.target.classList.contains("star-btn"))return e.stopPropagation(),e.preventDefault(),void this.toggleStar(parseInt(e.target.dataset.articleId));const t=e.target.closest(".article-item");if(t&&!e.target.classList.contains("star-btn")){const e=parseInt(t.dataset.index);this.selectArticle(e)}}),s.forEach((e,t)=>{const s=document.createElement("div");s.className="article-item "+(e.is_read?"read":""),s.dataset.articleId=e.id,s.dataset.index=t;const n=new Date(e.published_at).toLocaleDateString();s.innerHTML=`\n                <div class="article-header">\n                    <div style="flex: 1;">\n                        <div class="article-title">${this.escapeHtml(e.title)}</div>\n                        <div class="article-meta">\n                            <span>${n}</span>\n                            ${e.author?`<span>by ${this.escapeHtml(e.author)}</span>`:""}\n                        </div>\n                    </div>\n                    <div class="article-actions">\n                        <button class="action-btn star-btn ${e.is_starred?"starred":""}"\n                                data-article-id="${e.id}" title="Star article">★</button>\n                    </div>\n                </div>\n                ${e.description?`<div class="article-description">${this.sanitizeContent(e.description,!0)}</div>`:""}\n            `,i.appendChild(s)}),r.appendChild(i),"all"===this.currentFeed&&this.hasMoreArticles&&this.addLoadMoreButton(),this.applyArticleFilter(),this.sessionStarted=!1;const a=document.querySelectorAll(".article-item:not(.filtered-out)");if(a.length>0){const e=parseInt(a[0].dataset.index);this.selectArticle(e)}else this.currentArticle=null,document.getElementById("article-content").innerHTML='<div class="placeholder"><p>No articles to display.</p></div>'}async selectArticle(e){this.currentArticle=e,document.querySelectorAll(".article-item").forEach(e=>{e.classList.remove("active")});const t=document.querySelector(`[data-index="${e}"]`);t.classList.add("active");const s=this.articles[e];if(this.displayArticle(s),this.updateMobileNavigation("content"),window.innerWidth>=768&&window.innerWidth<1024){const e=document.querySelector(".sidebar-wrapper"),t=document.getElementById("sidebar-backdrop");e&&t&&(e.classList.remove("show"),t.classList.remove("show"))}t.scrollIntoView({behavior:"smooth",block:"start"})}sanitizeContent(e,t=!1){if("undefined"!=typeof DOMPurify){const s=["iframe","object","embed","applet","script"];t&&s.push("img");return DOMPurify.sanitize(e,{FORBID_TAGS:s,FORBID_ATTR:["onload","onclick","onerror","onmouseover"]})}let s=e.replace(/<iframe[^>]*>.*?<\/iframe>/gi,"<p><em>[Embedded content removed]</em></p>");return t&&(s=s.replace(/<img[^>]*>/gi,"")),s}displayArticle(e){const t=document.getElementById("article-content"),s=new Date(e.published_at).toLocaleString(),i=this.sanitizeContent(e.content||e.description||"<p>No content available.</p>");t.innerHTML=`\n            ${e.feed_title?`<div class="feed-label">${this.escapeHtml(e.feed_title)}</div>`:""}\n            <h1>${this.escapeHtml(e.title)}</h1>\n            <div class="meta">\n                <span>${s}</span>\n                ${e.author?`<span>by ${this.escapeHtml(e.author)}</span>`:""}\n                <a href="${e.url}" target="_blank" rel="noopener">View Original</a>\n            </div>\n            <div class="content">\n                ${i}\n            </div>\n        `,t.scrollTop=0}async selectNextArticleAndMarkCurrentAsRead(){if(null===this.currentArticle||0===this.articles.length)return;const e=this.articles[this.currentArticle];let t=null;for(let e=this.currentArticle+1;e<this.articles.length;e++){const s=this.articles[e];if("unread"===this.articleFilter){if(!s.is_read){t=e;break}}else{const s=document.querySelector(`[data-index="${e}"]`);if(s&&!s.classList.contains("filtered-out")){t=e;break}}}if(!e.is_read)try{e.is_read=!0;document.querySelector(`[data-index="${this.currentArticle}"]`).classList.add("read");const t=-1;e.feed_id?this.updateUnreadCountsOptimistically(e.feed_id,t):this.updateUnreadCountsForCurrentFeed(t),await this.markAsRead(e.id,!0)}catch(t){console.error("Failed to mark article as read:",t),e.is_read=!1;document.querySelector(`[data-index="${this.currentArticle}"]`).classList.remove("read");const s=1;e.feed_id?this.updateUnreadCountsOptimistically(e.feed_id,s):this.updateUnreadCountsForCurrentFeed(s)}if(null!==t)this.selectArticle(t);else if("unread"===this.articleFilter){this.articles.some((e,t)=>t>this.currentArticle&&!e.is_read)||(this.currentArticle=null,document.getElementById("article-content").innerHTML='<div class="placeholder"><p>No more unread articles.</p></div>')}else{0===document.querySelectorAll(".article-item:not(.filtered-out)").length&&(this.currentArticle=null,document.getElementById("article-content").innerHTML='<div class="placeholder"><p>No articles to display.</p></div>')}}selectNextArticle(){if(null!==this.currentArticle&&0!==this.articles.length)for(let e=this.currentArticle+1;e<this.articles.length;e++){const t=document.querySelector(`[data-index="${e}"]`);if(t&&!t.classList.contains("filtered-out"))return void this.selectArticle(e)}}selectPreviousArticle(){if(null!==this.currentArticle&&0!==this.articles.length)for(let e=this.currentArticle-1;e>=0;e--){const t=document.querySelector(`[data-index="${e}"]`);if(t&&!t.classList.contains("filtered-out"))return void this.selectArticle(e)}}selectNextVisibleArticle(){const e=document.querySelectorAll(".article-item:not(.filtered-out)");if(0===e.length)return this.currentArticle=null,void(document.getElementById("article-content").innerHTML='<div class="placeholder"><p>No articles to display.</p></div>');for(let e=this.currentArticle+1;e<this.articles.length;e++){const t=document.querySelector(`[data-index="${e}"]`);if(t&&!t.classList.contains("filtered-out"))return void this.selectArticle(e)}const t=parseInt(e[0].dataset.index);this.selectArticle(t)}openCurrentArticle(){if(null===this.currentArticle)return;const e=this.articles[this.currentArticle];window.open(e.url,"_blank")}async toggleCurrentArticleRead(){if(null===this.currentArticle)return;const e=this.articles[this.currentArticle],t=e.is_read,s=!e.is_read;try{e.is_read=s;document.querySelector(`[data-index="${this.currentArticle}"]`).classList.toggle("read",e.is_read);const t=s?-1:1;e.feed_id?this.updateUnreadCountsOptimistically(e.feed_id,t):this.updateUnreadCountsForCurrentFeed(t),await this.markAsRead(e.id,s)}catch(s){console.error("Failed to toggle article read status, reverting UI state"),e.is_read=t;document.querySelector(`[data-index="${this.currentArticle}"]`).classList.toggle("read",e.is_read);const i=t?-1:1;e.feed_id?this.updateUnreadCountsOptimistically(e.feed_id,i):this.updateUnreadCountsForCurrentFeed(i)}}applyArticleFilter(e=!0){const t=document.querySelectorAll(".article-item"),s=document.getElementById("article-list"),i=s.querySelector(".article-list-placeholder");i&&i.remove(),t.forEach(e=>{const t=parseInt(e.dataset.index),s=this.articles[t];if(!s)return e.classList.add("filtered-out"),void(e.style.display="none");"all"===this.articleFilter||"unread"===this.articleFilter&&!s.is_read?(e.classList.remove("filtered-out"),e.style.display=""):this.sessionStarted&&"unread"===this.articleFilter&&s.is_read||"unread"!==this.articleFilter?(e.classList.add("filtered-out"),e.style.display="none"):(e.classList.remove("filtered-out"),e.style.display="")});const n=document.querySelectorAll(".article-item:not(.filtered-out)");if(0===n.length){this.currentArticle=null,document.getElementById("article-content").innerHTML='<div class="placeholder"><p>No articles to display.</p></div>';const e=document.createElement("div");e.className="placeholder article-list-placeholder",e.innerHTML="<p>No unread articles in this feed.</p>",s.appendChild(e)}else{const t=s.querySelector(".article-list-placeholder");if(t&&t.remove(),e&&null!==this.currentArticle){const e=document.querySelector(`[data-index="${this.currentArticle}"]`);if(e&&e.classList.contains("filtered-out")){const e=parseInt(n[0].dataset.index);this.selectArticle(e)}}}}toggleCurrentArticleStar(){if(null===this.currentArticle)return;const e=this.articles[this.currentArticle];this.toggleStar(e.id)}async markAsRead(e,t){try{const s=await fetch(`/api/articles/${e}/read`,{method:"POST",headers:this.getAuthHeaders(),body:JSON.stringify({is_read:t})});if(!s.ok)throw new Error(`HTTP ${s.status}`)}catch(e){throw console.error("Failed to mark article as read:",e),e}}async toggleStar(e){try{if(!(await fetch(`/api/articles/${e}/star`,{method:"POST",headers:this.getAuthHeaders()})).ok)return void this.showError("Failed to toggle star");const t=this.articles.find(t=>t.id==e);if(t){t.is_starred=!t.is_starred;const s=document.querySelector(`.star-btn[data-article-id="${e}"]`);s&&s.classList.toggle("starred",t.is_starred)}}catch(e){console.error("Failed to toggle star:",e),this.showError("Failed to toggle star: "+e.message)}}async updateUnreadCounts(){try{const e=await fetch("/api/feeds/unread-counts");if(!e.ok)return console.error(`Failed to fetch unread counts: HTTP ${e.status}`),void(401===e.status&&console.error("Authentication failed for unread counts"));const t=await e.json();this.applyUnreadCounts(t)}catch(e){console.error("Error updating unread counts:",e)}}applyUnreadCounts(e){e&&"object"==typeof e||(e={});let t=0;this.feeds.forEach(s=>{let i=0;const n=s.id;if(e.hasOwnProperty(n))i=e[n];else if(e.hasOwnProperty(n.toString()))i=e[n.toString()];else if(e.hasOwnProperty(parseInt(n)))i=e[parseInt(n)];else for(const[t,s]of Object.entries(e))if(parseInt(t)===parseInt(n)||t.toString()===n.toString()){i=s;break}i=parseInt(i)||0,t+=i;const r=document.querySelector(`[data-feed-id="${s.id}"] .unread-count`);if(r)r.textContent=i,r.dataset.count=i;else{const e=document.querySelector(`[data-feed-id='${s.id}'] .unread-count`);e&&(e.textContent=i,e.dataset.count=i)}});const s=document.getElementById("all-unread-count");s&&(s.textContent=t,s.dataset.count=t),t>0&&setTimeout(()=>{const e=document.getElementById("all-unread-count");e&&"0"===e.textContent&&t>0&&(e.textContent=t,e.dataset.count=t)},100)}updateUnreadCountsOptimistically(e,t){{const s=String(e),i=document.querySelector(`[data-feed-id="${s}"] .unread-count`);if(i){const e=parseInt(i.dataset.count)||0,s=Math.max(0,e+t);i.textContent=s,i.dataset.count=s}const n=document.getElementById("all-unread-count");if(n){const e=parseInt(n.dataset.count)||0,s=Math.max(0,e+t);n.textContent=s,n.dataset.count=s}else console.warn("All unread count element not found")}}updateUnreadCountsForCurrentFeed(e){if("all"===this.currentFeed){const t=document.getElementById("all-unread-count");if(t){const s=parseInt(t.dataset.count)||0,i=Math.max(0,s+e);t.textContent=i,t.dataset.count=i}}else this.currentFeed&&this.updateUnreadCountsOptimistically(this.currentFeed,e)}startUnreadCountSync(){setInterval(()=>{this.updateUnreadCounts()},3e5)}async loadModalManager(){if(this.modalManager)return this.modalManager;console.log("Loading modal module...");const e=await import("./modals.js");return this.modalManager=new e.ModalManager(this),this.modalManager.init(),console.log("Modal module loaded"),this.modalManager}async showAddFeedModal(){(await this.loadModalManager()).showAddFeedModal()}hideAddFeedModal(){this.modalManager&&this.modalManager.hideAddFeedModal()}async showHelpModal(){(await this.loadModalManager()).showHelpModal()}hideHelpModal(){this.modalManager&&this.modalManager.hideHelpModal()}async showImportOpmlModal(){(await this.loadModalManager()).showImportOpmlModal()}hideImportOpmlModal(){this.modalManager&&this.modalManager.hideImportOpmlModal()}async addFeed(){const e=document.getElementById("feed-url").value,t=document.querySelector('#add-feed-form button[type="submit"]'),s=document.getElementById("cancel-add-feed"),i=document.getElementById("feed-url");t.textContent;t.disabled=!0,t.style.position="relative",s.disabled=!0,i.disabled=!0;const n=document.createElement("div");n.className="button-spinner-overlay",n.style.cssText="\n            position: absolute !important;\n            top: 0 !important;\n            left: 0 !important;\n            right: 0 !important;\n            bottom: 0 !important;\n            width: 100% !important;\n            height: 100% !important;\n            background-color: rgba(26, 115, 232, 0.9) !important;\n            display: flex !important;\n            align-items: center !important;\n            justify-content: center !important;\n            z-index: 9999 !important;\n            border-radius: 4px !important;\n        ";const r=document.createElement("div");r.style.cssText="\n            width: 20px !important;\n            height: 20px !important;\n            border: 4px solid rgba(255, 255, 255, 0.3) !important;\n            border-top: 4px solid #ffffff !important;\n            border-radius: 50% !important;\n            box-sizing: border-box !important;\n        ",n.appendChild(r),t.appendChild(n);let a=0,o=!0;const l=()=>{o&&(a+=6,r.style.transform=`rotate(${a}deg)`,setTimeout(l,16))};n.stopAnimation=()=>{o=!1},l();try{const t=await fetch("/api/feeds",{method:"POST",headers:this.getAuthHeaders(),body:JSON.stringify({url:e})});if(t.ok)console.log("Feed added successfully, reloading data..."),this.hideAddFeedModal(),await this.loadFeeds(),console.log("Reloading subscription info after adding feed..."),await this.loadSubscriptionInfo(),await this.updateUnreadCounts(),console.log("Calling updateSubscriptionDisplay after adding feed..."),this.updateSubscriptionDisplay();else if(402===t.status){const e=await t.json();e.limit_reached?this.showSubscriptionLimitModal(e):e.trial_expired?this.showTrialExpiredModal(e):this.showError(e.error||"Subscription required")}else{let e=`HTTP ${t.status}`;try{e=(await t.json()).error||e}catch(e){}const s=this.errorHandler.detectErrorType(new Error(e),t),i=this.errorHandler.getErrorMessage(s,e);this.showError(i,s,{retry:t.status>=500||0===t.status?()=>{const e=document.getElementById("feed-url-input");e&&e.value&&this.addFeed()}:null,context:"adding feed"})}}catch(e){console.error("Failed to add feed:",e);const t=this.errorHandler.detectErrorType(e),s=this.errorHandler.getErrorMessage(t,"Failed to add feed");this.showError(s,t,{retry:()=>{const e=document.getElementById("feed-url-input");e&&e.value&&this.addFeed()},context:"adding feed"})}finally{const e=t.querySelector(".button-spinner-overlay");e&&(e.stopAnimation&&e.stopAnimation(),e.remove()),t.style.position="",t.disabled=!1,s.disabled=!1,i.disabled=!1}}async deleteFeed(e){if(confirm("Are you sure you want to remove this feed from your subscriptions?"))try{const t=await fetch(`/api/feeds/${e}`,{method:"DELETE",headers:this.getAuthHeaders()});if(!t.ok){const e=await t.json();throw console.error("Delete feed API error:",e),new Error(e.error||`HTTP ${t.status}`)}await t.json();this.currentFeed=null,this.currentArticle=null,this.articles=[],await new Promise(e=>setTimeout(e,200)),await this.loadFeedsOptimized(),await this.loadSubscriptionInfo(),this.updateSubscriptionDisplay(),this.selectFeed("all")}catch(e){console.error("Delete feed error:",e),this.showError("Failed to delete feed: "+e.message)}}async refreshFeeds(){const e=document.getElementById("refresh-btn"),t=e?e.textContent:"";try{e&&(e.disabled=!0,e.textContent="Refreshing..."),console.log("Refreshing feeds...");const t=await fetch("/api/feeds/refresh",{method:"POST",headers:this.getAuthHeaders()});if(!t.ok){const e=new Error(`HTTP ${t.status}`),s=this.errorHandler.detectErrorType(e,t),i=this.errorHandler.getErrorMessage(s,e.message);throw this.errorHandler.showError(i,s,{retry:()=>this.refreshFeeds(),context:"refreshing feeds"}),e}console.log("Feeds refreshed successfully"),this.currentFeed&&await this.loadArticles(this.currentFeed),await this.updateUnreadCounts(),this.showSuccess("Feeds refreshed successfully")}catch(e){console.error("Failed to refresh feeds:",e)}finally{e&&(e.disabled=!1,e.textContent=t)}}showError(e,t=ErrorType.UNKNOWN,s={}){this.errorHandler.showError(e,t,s)}showSuccess(e){this.errorHandler.showToast(e,ToastType.SUCCESS)}escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}createEmptyState(e,t,s,i=null){const n=document.createElement("div");n.className="empty-state";let r=`\n            <img src="${e}" alt="${t}" class="empty-state-icon">\n            <div class="empty-state-title">${t}</div>\n            <div class="empty-state-message">${s}</div>\n        `;return i&&(r+=`<div class="empty-state-action">${i}</div>`),n.innerHTML=r,n}showSubscriptionLimitModal(e){const t=document.createElement("div");t.className="modal",t.style.display="block",t.innerHTML=`\n            <div class="modal-content">\n                <span class="close">&times;</span>\n                <h2>Upgrade to Pro</h2>\n                <p>You've reached the free limit of ${e.current_limit} feeds.</p>\n                <p>Upgrade to <strong>GoRead2 Pro</strong> for:</p>\n                <ul>\n                    <li>Unlimited RSS feeds</li>\n                    <li>Priority support</li>\n                    <li>Advanced features</li>\n                </ul>\n                <p style="font-size: 18px; font-weight: 600; margin: 20px 0;">Only $2.99/month</p>\n                <div class="form-actions">\n                    <button id="upgrade-btn" class="btn btn-primary">Upgrade to Pro</button>\n                    <button id="cancel-upgrade" class="btn btn-secondary">Cancel</button>\n                </div>\n            </div>\n        `,document.body.appendChild(t);const s=()=>{t.remove()};t.querySelector(".close").addEventListener("click",s),t.querySelector("#cancel-upgrade").addEventListener("click",s),t.querySelector("#upgrade-btn").addEventListener("click",()=>{this.startUpgradeProcess(),s()}),t.addEventListener("click",e=>{e.target===t&&s()})}showTrialExpiredModal(e){const t=document.createElement("div");t.className="modal",t.style.display="block",t.innerHTML='\n            <div class="modal-content">\n                <span class="close">&times;</span>\n                <h2>Free Trial Expired</h2>\n                <p>Your 30-day free trial has ended.</p>\n                <p>Subscribe to <strong>GoRead2 Pro</strong> to continue using the service with:</p>\n                <ul>\n                    <li>Unlimited RSS feeds</li>\n                    <li>Continued access to all articles</li>\n                    <li>Priority support</li>\n                </ul>\n                <p style="font-size: 18px; font-weight: 600; margin: 20px 0;">Only $2.99/month</p>\n                <div class="form-actions">\n                    <button id="subscribe-btn" class="btn btn-primary">Subscribe Now</button>\n                    <button id="cancel-subscribe" class="btn btn-secondary">Cancel</button>\n                </div>\n            </div>\n        ',document.body.appendChild(t);const s=()=>{t.remove()};t.querySelector(".close").addEventListener("click",s),t.querySelector("#cancel-subscribe").addEventListener("click",s),t.querySelector("#subscribe-btn").addEventListener("click",()=>{this.startUpgradeProcess(),s()}),t.addEventListener("click",e=>{e.target===t&&s()})}async startUpgradeProcess(){try{const e=await fetch("/api/stripe/config");if(!e.ok)throw new Error("Stripe not configured");await e.json();const t=await fetch("/api/subscription/checkout",{method:"POST",headers:this.getAuthHeaders()});if(!t.ok){const e=await t.json();throw new Error(e.error||"Failed to create checkout session")}const s=await t.json();window.location.href=s.session_url}catch(e){console.error("Upgrade process failed:",e),"Stripe not configured"===e.message?this.showError("Payment processing is not available. Please contact support."):this.showError("Failed to start upgrade process: "+e.message)}}showLogin(){document.getElementById("app").style.display="none",this.showLoginScreen()}showApp(){document.getElementById("login-screen")?.remove(),document.getElementById("app").style.display="block",this.updateUserInfo()}showLoginScreen(){const e=document.createElement("div");e.id="login-screen",e.innerHTML='\n            <div class="login-container">\n                <div class="login-logo">\n                    <img src="/static/goread2_logo.svg" alt="GoRead2 Logo" width="80" height="80">\n                </div>\n                <h1>GoRead2</h1>\n                <p>Sign in with Google to access your RSS feeds</p>\n                <button id="google-login-btn" class="btn btn-primary">Sign in with Google</button>\n                <div class="login-footer">\n                    <a href="/privacy" target="_blank" class="privacy-link">Privacy Policy</a>\n                </div>\n            </div>\n        ',document.body.appendChild(e),document.getElementById("google-login-btn").addEventListener("click",()=>{this.login()})}async login(){try{this.authCheckFailed=!1;const e=await fetch("/auth/login");if(e.ok){const t=await e.json();window.location.href=t.auth_url}else this.showError("Failed to start login process")}catch(e){this.showError("Login failed: "+e.message)}}async logout(){try{await fetch("/auth/logout",{method:"POST",headers:this.getAuthHeaders()}),this.user=null,this.csrfToken=null,this.showLogin()}catch(e){this.showError("Logout failed: "+e.message)}}updateUserInfo(){if(this.user){const e=document.querySelector(".header-actions"),t=this.createSubscriptionStatusElement(),s=document.createElement("div");s.className="user-info",s.innerHTML=`\n                ${t}\n                <span class="user-name">${this.escapeHtml(this.user.name)}</span>\n                <img class="user-avatar" src="${this.user.avatar}" alt="User Avatar" width="32" height="32">\n                <a href="/account" class="btn btn-secondary">Account</a>\n                <button id="logout-btn" class="btn btn-secondary">Logout</button>\n            `,e.appendChild(s),document.getElementById("logout-btn").addEventListener("click",()=>{this.logout()})}}createSubscriptionStatusElement(){if(!this.subscriptionInfo)return'<div class="subscription-status loading">Loading...</div>';const e=this.subscriptionInfo;let t="",s="";if("unlimited"===e.status)s="unlimited",t=`\n                <div class="subscription-status ${s}">\n                    <span class="status-badge">UNLIMITED</span>\n                    <span class="status-text">Unlimited feeds</span>\n                </div>\n            `;else if("admin"===e.status||"admin_trial"===e.status)s="admin",t=`\n                <div class="subscription-status ${s}">\n                    <span class="status-badge">ADMIN</span>\n                    <span class="status-text">Unlimited access</span>\n                </div>\n            `;else if("active"===e.status)s="pro",t=`\n                <div class="subscription-status ${s}">\n                    <span class="status-badge">PRO</span>\n                    <span class="status-text">Unlimited feeds</span>\n                </div>\n            `;else if("free_months"===e.status)s="free",t=`\n                <div class="subscription-status ${s}">\n                    <span class="status-badge">FREE</span>\n                    <span class="status-text">Free months remaining</span>\n                </div>\n            `;else if("trial"===e.status){s="trial";const i=e.trial_days_remaining||0;t=`\n                <div class="subscription-status ${s}">\n                    <span class="status-badge">TRIAL</span>\n                    <span class="status-text">${e.current_feeds}/${e.feed_limit} feeds • ${i} days left</span>\n                </div>\n            `}else s="expired",t=`\n                <div class="subscription-status ${s}">\n                    <span class="status-badge">EXPIRED</span>\n                    <span class="status-text">Subscribe to continue</span>\n                </div>\n            `;return t}updateSubscriptionDisplay(){const e=document.querySelector(".subscription-status");if(e){const t=this.createSubscriptionStatusElement(),s=document.createElement("div");s.innerHTML=t;const i=s.firstElementChild;e.replaceWith(i)}this.updateSubscriptionPanel()}updateSubscriptionPanel(){const e=document.getElementById("subscription-panel");if(!e)return void console.log("ERROR: subscription-panel element not found in DOM");if(console.log("Updating subscription panel with info:",this.subscriptionInfo),!this.subscriptionInfo)return console.log("No subscription info, hiding panel"),void e.classList.add("hidden");e.classList.remove("hidden");const t=this.subscriptionInfo;console.log("Subscription status:",t.status);let s="";if("unlimited"===t.status)s='\n                <div class="subscription-info unlimited">\n                    <div>\n                        <div class="status">Unlimited Access</div>\n                        <div class="details">No subscription required</div>\n                    </div>\n                </div>\n            ';else if("admin"===t.status||"admin_trial"===t.status)s='\n                <div class="subscription-info admin">\n                    <div>\n                        <div class="status">Admin Access</div>\n                        <div class="details">Unlimited feeds</div>\n                    </div>\n                </div>\n            ';else if("active"===t.status)s='\n                <div class="subscription-info pro">\n                    <div>\n                        <div class="status">GoRead2 Pro</div>\n                        <div class="details">Unlimited feeds</div>\n                    </div>\n                </div>\n            ';else if("free_months"===t.status)s='\n                <div class="subscription-info free">\n                    <div>\n                        <div class="status">Free Months</div>\n                        <div class="details">Unlimited feeds</div>\n                    </div>\n                </div>\n            ';else if("trial"===t.status){const e=t.trial_days_remaining||0,i=t.current_feeds||0,n=t.feed_limit||20;s=`\n                <div class="subscription-info trial">\n                    <div>\n                        <div class="status">Free Trial</div>\n                        <div class="details">${i}/${n} feeds • ${e} days left</div>\n                    </div>\n                    ${i>=n-3||e<=7?'<button class="upgrade-btn" onclick="app.startUpgradeProcess()">Upgrade</button>':""}\n                </div>\n            `}else console.log("Falling through to expired case - status was:",t.status),s='\n                <div class="subscription-info expired">\n                    <div>\n                        <div class="status">Trial Expired</div>\n                        <div class="details">Subscribe to continue</div>\n                    </div>\n                    <button class="upgrade-btn" onclick="app.startUpgradeProcess()">Subscribe</button>\n                </div>\n            ';e.innerHTML=s}}document.addEventListener("DOMContentLoaded",()=>{try{console.log("DOM loaded, initializing GoReadApp"),window.app=new GoReadApp,console.log("GoReadApp initialized:",window.app);const e=document.getElementById("app-loading-screen");e&&(e.classList.add("fade-out"),setTimeout(()=>{e.remove()},300))}catch(e){console.error("Error initializing GoReadApp:",e);const t=document.getElementById("app-loading-screen");t&&(t.classList.add("fade-out"),setTimeout(()=>t.remove(),300))}});class PullToRefresh{constructor(e,t){this.element=e,this.onRefresh=t,this.touchStartY=0,this.currentY=0,this.isDragging=!1,this.isRefreshing=!1,this.threshold=80,this.maxPull=150,this.createIndicator(),this.bindEvents()}createIndicator(){this.indicator=document.createElement("div"),this.indicator.className="pull-to-refresh-indicator",this.indicator.innerHTML='\n            <div class="pull-to-refresh-spinner"></div>\n            <div class="pull-to-refresh-text">Pull to refresh</div>\n        ',this.element.insertBefore(this.indicator,this.element.firstChild)}bindEvents(){this.element.addEventListener("touchstart",this.handleTouchStart.bind(this),{passive:!0}),this.element.addEventListener("touchmove",this.handleTouchMove.bind(this),{passive:!1}),this.element.addEventListener("touchend",this.handleTouchEnd.bind(this),{passive:!0})}handleTouchStart(e){0!==this.element.scrollTop||this.isRefreshing||(this.touchStartY=e.touches[0].clientY,this.isDragging=!0)}handleTouchMove(e){if(!this.isDragging||this.isRefreshing)return;this.currentY=e.touches[0].clientY;const t=this.currentY-this.touchStartY;if(t>0&&0===this.element.scrollTop){e.preventDefault();const s=2.5,i=Math.min(t/s,this.maxPull);this.updateIndicator(i);const n=this.indicator.querySelector(".pull-to-refresh-text");i>=this.threshold?(n.textContent="Release to refresh",this.indicator.classList.add("ready")):(n.textContent="Pull to refresh",this.indicator.classList.remove("ready"))}}handleTouchEnd(){if(!this.isDragging||this.isRefreshing)return;this.isDragging=!1;const e=this.currentY-this.touchStartY;Math.min(e/2.5,this.maxPull)>=this.threshold?this.triggerRefresh():this.resetIndicator()}updateIndicator(e){this.indicator.style.transform=`translateY(${e}px)`,this.indicator.style.opacity=Math.min(e/this.threshold,1)}async triggerRefresh(){if(!this.isRefreshing){this.isRefreshing=!0,this.indicator.classList.add("refreshing"),this.indicator.querySelector(".pull-to-refresh-text").textContent="Refreshing...";try{await this.onRefresh()}catch(e){console.error("Pull-to-refresh failed:",e)}finally{setTimeout(()=>{this.isRefreshing=!1,this.resetIndicator()},500)}}}resetIndicator(){this.indicator.style.transform="translateY(0)",this.indicator.style.opacity="0",this.indicator.classList.remove("ready","refreshing"),this.indicator.querySelector(".pull-to-refresh-text").textContent="Pull to refresh"}}window.addEventListener("error",e=>{console.error("Global error caught:",e.error)}),window.addEventListener("unhandledrejection",e=>{console.error("Unhandled promise rejection:",e.reason)});